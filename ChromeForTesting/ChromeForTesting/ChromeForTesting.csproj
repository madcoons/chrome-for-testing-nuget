<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net8.0;net9.0</TargetFrameworks>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>latest</LangVersion>
        <ChromeVersion Condition=" '$(Configuration)' == 'Debug' ">125.0.6422.60</ChromeVersion>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>ChromeForTesting</PackageId>
        <Description>Chrome for Testing binary distributed as nuget package. It has all you need to start Chrome on server/local without any installation on system or downloading in runtime, it works even in scratch Docker image.</Description>
        <Version Condition=" '$(Configuration)' == 'Debug' ">125.0.6422.600111</Version>
        <Authors>MyDesigns Devs</Authors>
        <Company>MyDesigns</Company>
        <RepositoryUrl>https://github.com/madcoons/chrome-for-testing-nuget.git</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <PackageTags>Chrome;ChromeForTesting;Browser;Portable;No-Installation;Cross-Platform</PackageTags>
        <PackageIcon>icon.png</PackageIcon>
        <AssemblyVersion>$(ChromeVersion)</AssemblyVersion><!-- Version Revision can be greater then limit of 6422 so using ChromeVersion instead -->
    </PropertyGroup>

    <Target Name="GenerateVersionConstant" BeforeTargets="BeforeCompile">
        <PropertyGroup>
            <ChromeInstanceVersionSourceFile>
namespace ChromeForTesting%3B

public partial class ChromeForTestingInstance
{
    public const string CHROME_VERSION = "$(ChromeVersion)"%3B
    public const string NUGET_PACKAGE_VERSION = "$(Version)"%3B
}
            </ChromeInstanceVersionSourceFile>
        </PropertyGroup>
        <WriteLinesToFile
                File="$(IntermediateOutputPath)ChromeForTestingInstance.Version.cs"
                Lines="$(ChromeInstanceVersionSourceFile)"
                Overwrite="true"
                WriteOnlyWhenDifferent="true"/>
    </Target>

    <ItemGroup>
        <None Include="../../README.md" Pack="true" PackagePath="/"/>
        <None Include="buildTransitive/ChromeForTesting.props" Pack="true" PackagePath="buildTransitive/" />
        <None Include="icon.png" Pack="true" PackagePath="/"/>
        <Compile Include="$(IntermediateOutputPath)ChromeForTestingInstance.Version.cs"/>
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="DownloadArchive" Version="1.0.27" />
    </ItemGroup>
    
    <Import Project="buildTransitive/ChromeForTesting.props" Condition=" '$(Configuration)' == 'Debug' " />
</Project>
